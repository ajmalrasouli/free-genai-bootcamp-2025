version: '3.8'

services:
  launcher:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dari-launcher
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dari-network
    restart: unless-stopped

  fa-mud:
    build:
      context: ../fa-mud
      dockerfile: Dockerfile
    container_name: dari-fa-mud
    ports:
      - "8001:8001"
    networks:
      - dari-network
    restart: unless-stopped

  finger-spelling:
    build:
      context: ../finger-spelling
      dockerfile: Dockerfile
    container_name: dari-finger-spelling
    ports:
      - "8002:8002"
    networks:
      - dari-network
    restart: unless-stopped

  lang-portal:
    build:
      context: ../lang-portal
      dockerfile: Dockerfile
    container_name: dari-lang-portal
    ports:
      - "8003:8003"
    networks:
      - dari-network
    restart: unless-stopped

  listening-comp:
    build:
      context: ../listening-comp
      dockerfile: Dockerfile
    container_name: dari-listening-comp
    ports:
      - "8004:8004"
    networks:
      - dari-network
    restart: unless-stopped

  opea-comps:
    build:
      context: ../opea-comps
      dockerfile: Dockerfile
    container_name: dari-opea-comps
    ports:
      - "8005:8005"
    networks:
      - dari-network
    restart: unless-stopped

  song-vocab:
    build:
      context: ../song-vocab
      dockerfile: Dockerfile
    container_name: dari-song-vocab
    ports:
      - "8006:8006"
    environment:
      # Add environment variable for the search API key
      - SERP_API_KEY=65eb8e6392443806e5a176529e9991d2032e39b898ac9e3810e0e72d1a566584 # <-- REPLACE WITH YOUR ACTUAL KEY
    networks:
      - dari-network
    restart: unless-stopped

  visual-novel:
    build:
      context: ../visual-novel
      dockerfile: Dockerfile
    container_name: dari-visual-novel
    ports:
      - "8007:8007"
    networks:
      - dari-network
    restart: unless-stopped

  writing-practice:
    build:
      context: ../writing-practice
      dockerfile: Dockerfile
    container_name: dari-writing-practice
    ports:
      - "8008:8008"
   
      
    networks:
      - dari-network
    restart: unless-stopped

  # -- Added TTS Service Definition --
  tts-service:
    image: ghcr.io/coqui-ai/tts-cpu:latest
    container_name: phcr_tts-microservice # Renamed slightly to avoid potential conflict if run separately
    ports:
      - "5005:5002" # Map internal 5002 to host 5005
    volumes:
      - ./models:/root/.local/share/tts # Persist downloaded models
    environment:
      # Revert to English model
      - MODEL_NAME=tts_models/en/ljspeech/tacotron2-DDC
    # Using the entrypoint and command separately
    entrypoint: [ "python", "-m", "TTS.server.server" ]
    # Revert to English model
    command: [ "--model_name", "tts_models/en/ljspeech/tacotron2-DDC", "--port", "5002" ]
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    networks:
      - dari-network # Connect to the shared network
    restart: unless-stopped
  # -- End Added TTS Service --

networks:
  dari-network:
    name: dari-network
